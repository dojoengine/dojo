//! > Test expansion of the component contract.

//! > test_runner_name
test_expand_plugin

//! > cairo_code
#[system]
mod spawn {
    use traits::Into;
    use dojo::world::Context;

    fn execute(ctx: Context, name: felt252) {
        return ();
    }
}

#[system]
mod proxy {
    fn execute(value: felt252) -> felt252 {
        value
    }
}

//! > generated_cairo_code
#[starknet::contract]
mod spawn {
    use option::OptionTrait;
    use array::SpanTrait;

    use dojo::world;
    use dojo::world::IWorldDispatcher;
    use dojo::world::IWorldDispatcherTrait;
    use dojo::database::query::Query;
    use dojo::database::query::QueryTrait;
    use dojo::database::query::LiteralIntoQuery;
    use dojo::database::query::TupleSize1IntoQuery;
    use dojo::database::query::TupleSize2IntoQuery;
    use dojo::database::query::TupleSize3IntoQuery;
    use dojo::database::query::IntoPartitioned;
    use dojo::database::query::IntoPartitionedQuery;

    #[storage]
    struct Storage {}

    #[external(v0)]
    fn name(self: @ContractState) -> felt252 {
        'spawn'
    }

    use traits::Into;
    use dojo::world::Context;

    #[external(v0)]
    fn execute(self: @ContractState, ctx: Context, name: felt252) {
        return ();
    }
}


#[starknet::contract]
mod proxy {
    use option::OptionTrait;
    use array::SpanTrait;

    use dojo::world;
    use dojo::world::IWorldDispatcher;
    use dojo::world::IWorldDispatcherTrait;
    use dojo::database::query::Query;
    use dojo::database::query::QueryTrait;
    use dojo::database::query::LiteralIntoQuery;
    use dojo::database::query::TupleSize1IntoQuery;
    use dojo::database::query::TupleSize2IntoQuery;
    use dojo::database::query::TupleSize3IntoQuery;
    use dojo::database::query::IntoPartitioned;
    use dojo::database::query::IntoPartitionedQuery;

    #[storage]
    struct Storage {}

    #[external(v0)]
    fn name(self: @ContractState) -> felt252 {
        'proxy'
    }


    #[external(v0)]
    fn execute(self: @ContractState, _ctx: dojo::world::Context, value: felt252) -> felt252 {
        value
    }
}

//! > expected_diagnostics
