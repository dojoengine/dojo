//! > Test expansion of the component contract.

//! > test_runner_name
ExpandContractTestRunner

//! > cairo_code
use serde::Serde;

#[derive(Component)]
struct Position {
    x: felt252,
    y: felt252
}

trait PositionTrait {
    fn is_zero(self: Position) -> bool;
    fn is_equal(self: Position, b: Position) -> bool;
}

impl PositionImpl of PositionTrait {
    fn is_zero(self: Position) -> bool {
        match self.x - self.y {
            0 => bool::True(()),
            _ => bool::False(()),
        }
    }

    fn is_equal(self: Position, b: Position) -> bool {
        self.x == b.x & self.y == b.y
    }
}

//! > generated_cairo_code
use serde::Serde;

trait PositionTrait {
    fn is_zero(self: Position) -> bool;
    fn is_equal(self: Position, b: Position) -> bool;
}

impl PositionImpl of PositionTrait {
    fn is_zero(self: Position) -> bool {
        match self.x - self.y {
            0 => bool::True(()),
            _ => bool::False(()),
        }
    }

    fn is_equal(self: Position, b: Position) -> bool {
        self.x == b.x & self.y == b.y
    }
}

#[derive(Copy, Drop, Serde)]
struct Position {
    x: felt252,
    y: felt252
}

#[abi]
trait IPosition {
    fn name() -> felt252;
    fn len() -> u8;
    fn serialize(raw: Span<felt252>) -> Position;
    fn deserialize(value: Position) -> Span<felt252>;
}

#[contract]
mod PositionComponent {
    use array::ArrayTrait;
    use option::OptionTrait;
    use dojo_core::serde::SpanSerde;
    use super::Position;

    #[view]
    fn schema() -> Array<name, kind, len> {
        Array::new([ ('x', 'felt252', 255), ('y', 'felt252', 255), ])
    }


    #[view]
    fn name() -> felt252 {
        'Position'
    }

    #[view]
    fn len() -> usize {
        2_usize
    }
}

//! > expected_diagnostics
error: Skipped tokens. Expected: argument.
 --> Position:26:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> Position:30:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Position:25:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Position:25:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Plugin diagnostic: Invalid path.
 --> Position:26:28
                    Array::new([        
                           ^*^

error: Plugin diagnostic: Type annotations needed. Failed to infer ?0
 --> Position:26:21
                    Array::new([        
                    ^***^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Position:25:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Position:25:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Wrong number of generic arguments. Expected 1, found: 3
 --> contract:73:28
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                           ^***^

error: Not a type.
 --> contract:73:34
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                 ^**^

error: Trait `core::serde::Serde::<<missing>>` has multiple implementations, in: "dojo_core::serde::SpanSerde", "core::starknet::class_hash::ClassHashSerde", "core::starknet::contract_address::ContractAddressSerde", "core::starknet::storage_access::StorageAddressSerde", "core::serde::Felt252Serde", "core::serde::BoolSerde", "core::serde::U8Serde", "core::serde::U16Serde", "core::serde::U32Serde", "core::serde::U64Serde", "core::serde::U128Serde", "core::serde::ArraySerde", "core::serde::TupleSize0Serde", "core::serde::TupleSize1Serde", "core::serde::TupleSize2Serde", "core::serde::TupleSize3Serde", "core::serde::TupleSize4Serde", "core::integer::u256Serde"
 --> contract:73:53
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                                    ^*******^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> Moves:25:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> Moves:28:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> Position:26:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> Position:30:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Moves:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Moves:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Plugin diagnostic: Invalid path.
 --> Moves:25:28
                    Array::new([        
                           ^*^

error: Plugin diagnostic: Type annotations needed. Failed to infer ?0
 --> Moves:25:21
                    Array::new([        
                    ^***^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Moves:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Moves:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Wrong number of generic arguments. Expected 1, found: 3
 --> contract:72:28
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                           ^***^

error: Not a type.
 --> contract:72:34
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                 ^**^

error: Trait `core::serde::Serde::<<missing>>` has multiple implementations, in: "dojo_core::serde::SpanSerde", "core::starknet::class_hash::ClassHashSerde", "core::starknet::contract_address::ContractAddressSerde", "core::starknet::storage_access::StorageAddressSerde", "core::serde::Felt252Serde", "core::serde::BoolSerde", "core::serde::U8Serde", "core::serde::U16Serde", "core::serde::U32Serde", "core::serde::U64Serde", "core::serde::U128Serde", "core::serde::ArraySerde", "core::serde::TupleSize0Serde", "core::serde::TupleSize1Serde", "core::serde::TupleSize2Serde", "core::serde::TupleSize3Serde", "core::serde::TupleSize4Serde", "core::integer::u256Serde"
 --> contract:72:53
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                                    ^*******^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Position:25:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Position:25:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Plugin diagnostic: Invalid path.
 --> Position:26:28
                    Array::new([        
                           ^*^

error: Plugin diagnostic: Type annotations needed. Failed to infer ?0
 --> Position:26:21
                    Array::new([        
                    ^***^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Position:25:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Position:25:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Wrong number of generic arguments. Expected 1, found: 3
 --> contract:73:28
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                           ^***^

error: Not a type.
 --> contract:73:34
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                 ^**^

error: Trait `core::serde::Serde::<<missing>>` has multiple implementations, in: "dojo_core::serde::SpanSerde", "core::starknet::class_hash::ClassHashSerde", "core::starknet::contract_address::ContractAddressSerde", "core::starknet::storage_access::StorageAddressSerde", "core::serde::Felt252Serde", "core::serde::BoolSerde", "core::serde::U8Serde", "core::serde::U16Serde", "core::serde::U32Serde", "core::serde::U64Serde", "core::serde::U128Serde", "core::serde::ArraySerde", "core::serde::TupleSize0Serde", "core::serde::TupleSize1Serde", "core::serde::TupleSize2Serde", "core::serde::TupleSize3Serde", "core::serde::TupleSize4Serde", "core::integer::u256Serde"
 --> contract:73:53
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                                    ^*******^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:16:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> Status:25:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> Status:28:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> Role:25:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> Role:28:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Status:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Status:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Plugin diagnostic: Invalid path.
 --> Status:25:28
                    Array::new([        
                           ^*^

error: Plugin diagnostic: Type annotations needed. Failed to infer ?0
 --> Status:25:21
                    Array::new([        
                    ^***^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Status:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Status:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Wrong number of generic arguments. Expected 1, found: 3
 --> contract:72:28
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                           ^***^

error: Not a type.
 --> contract:72:34
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                 ^**^

error: Trait `core::serde::Serde::<<missing>>` has multiple implementations, in: "dojo_core::serde::SpanSerde", "core::starknet::class_hash::ClassHashSerde", "core::starknet::contract_address::ContractAddressSerde", "core::starknet::storage_access::StorageAddressSerde", "core::serde::Felt252Serde", "core::serde::BoolSerde", "core::serde::U8Serde", "core::serde::U16Serde", "core::serde::U32Serde", "core::serde::U64Serde", "core::serde::U128Serde", "core::serde::ArraySerde", "core::serde::TupleSize0Serde", "core::serde::TupleSize1Serde", "core::serde::TupleSize2Serde", "core::serde::TupleSize3Serde", "core::serde::TupleSize4Serde", "core::integer::u256Serde"
 --> contract:72:53
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                                    ^*******^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Role:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Role:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Plugin diagnostic: Invalid path.
 --> Role:25:28
                    Array::new([        
                           ^*^

error: Plugin diagnostic: Type annotations needed. Failed to infer ?0
 --> Role:25:21
                    Array::new([        
                    ^***^

error: Plugin diagnostic: Wrong number of generic arguments. Expected 1, found: 3
 --> Role:24:32
                fn schema() -> Array<name, kind, len> {
                               ^***^

error: Plugin diagnostic: Not a type.
 --> Role:24:38
                fn schema() -> Array<name, kind, len> {
                                     ^**^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Wrong number of generic arguments. Expected 1, found: 3
 --> contract:72:28
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                           ^***^

error: Not a type.
 --> contract:72:34
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                 ^**^

error: Trait `core::serde::Serde::<<missing>>` has multiple implementations, in: "dojo_core::serde::SpanSerde", "core::starknet::class_hash::ClassHashSerde", "core::starknet::contract_address::ContractAddressSerde", "core::starknet::storage_access::StorageAddressSerde", "core::serde::Felt252Serde", "core::serde::BoolSerde", "core::serde::U8Serde", "core::serde::U16Serde", "core::serde::U32Serde", "core::serde::U64Serde", "core::serde::U128Serde", "core::serde::ArraySerde", "core::serde::TupleSize0Serde", "core::serde::TupleSize1Serde", "core::serde::TupleSize2Serde", "core::serde::TupleSize3Serde", "core::serde::TupleSize4Serde", "core::integer::u256Serde"
 --> contract:72:53
            serde::Serde::<Array<name, kind, len>>::serialize(ref arr, res);
                                                    ^*******^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^

error: Skipped tokens. Expected: argument.
 --> contract:12:32
                    Array::new([        
                               ^

error: Skipped tokens. Expected: argument.
 --> contract:15:21
                    ])
                    ^
