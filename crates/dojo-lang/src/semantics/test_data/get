//! > Test no params

//! > test_runner_name
test_semantics

//! > setup_code
use array::ArrayTrait;
use dojo::world::{IWorldDispatcher, IWorldDispatcherTrait};

#[derive(Copy, Drop, Serde, Introspect)]
struct Health {
	#[key]
	id: u32,
	health: u16,
}

//! > function_code
let key: felt252 = 0xb0b;
let world = IWorldDispatcher{contract_address: 0x0.try_into().unwrap()};

//! > expression
get!()

//! > expected
Missing(
    ExprMissing {
        ty: <missing>,
    },
)

//! > semantic_diagnostics
error: Plugin diagnostic: Invalid arguments. Expected "get!(world, keys, (models,))"
 --> lib.cairo:12:1
get!()
^****^

error: Inline macro `get` failed.
 --> lib.cairo:12:1
get!()
^****^

//! > ==========================================================================

//! > Test wrong params

//! > test_runner_name
test_semantics

//! > setup_code
use array::ArrayTrait;
use dojo::world::{IWorldDispatcher, IWorldDispatcherTrait};

#[derive(Copy, Drop, Serde, Introspect)]
struct Health {
	#[key]
	id: u32,
	health: u16,
}

//! > function_code
let key: felt252 = 0xb0b;
let world = IWorldDispatcher{contract_address: 0x0.try_into().unwrap()};

//! > expression
get!(world)

//! > expected
Missing(
    ExprMissing {
        ty: <missing>,
    },
)

//! > semantic_diagnostics
error: Plugin diagnostic: Invalid arguments. Expected "get!(world, keys, (models,))"
 --> lib.cairo:12:1
get!(world)
^*********^

error: Inline macro `get` failed.
 --> lib.cairo:12:1
get!(world)
^*********^

//! > ==========================================================================

//! > Test world and keys

//! > no_diagnostics
true

//! > dojo_semantic
get_success

//! > test_runner_name
test_semantics

//! > setup_code
use array::ArrayTrait;
use dojo::world::{IWorldDispatcher, IWorldDispatcherTrait};

#[derive(Copy, Drop, Serde, Introspect)]
struct Health {
	#[key]
	id: u32,
	health: u16,
}

//! > function_code
let key: felt252 = 0xb0b;
let world = IWorldDispatcher{contract_address: 0x0.try_into().unwrap()};

//! > expression
get!(world, key, (Health))

//! > expected
Block(
    ExprBlock {
        statements: [
            Let(
                StatementLet {
                    pattern: Variable(
                        __get_macro_keys__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::felt252>::new,
                            args: [],
                            ty: core::array::Array::<core::felt252>,
                        },
                    ),
                },
            ),
            Expr(
                StatementExpr {
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::Felt252Serde::serialize,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::key),
                                            ),
                                            ty: @core::felt252,
                                        },
                                    ),
                                ),
                                Reference(
                                    LocalVarId(test::__get_macro_keys__),
                                ),
                            ],
                            ty: (),
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __get_macro_keys__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::felt252>::span,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::__get_macro_keys__),
                                            ),
                                            ty: @core::array::Array::<core::felt252>,
                                        },
                                    ),
                                ),
                            ],
                            ty: core::array::Span::<core::felt252>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_layout__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::integer::u8>::new,
                            args: [],
                            ty: core::array::Array::<core::integer::u8>,
                        },
                    ),
                },
            ),
            Expr(
                StatementExpr {
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: test::HealthIntrospect::layout,
                            args: [
                                Reference(
                                    LocalVarId(test::__Health_layout__),
                                ),
                            ],
                            ty: (),
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_layout_clone__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayTCloneImpl::<core::integer::u8, core::clone::TCopyClone::<core::integer::u8, core::integer::u8Copy>, core::integer::u8Drop>::clone,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::__Health_layout__),
                                            ),
                                            ty: @core::array::Array::<core::integer::u8>,
                                        },
                                    ),
                                ),
                            ],
                            ty: core::array::Array::<core::integer::u8>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_layout_span__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::integer::u8>::span,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::__Health_layout__),
                                            ),
                                            ty: @core::array::Array::<core::integer::u8>,
                                        },
                                    ),
                                ),
                            ],
                            ty: core::array::Span::<core::integer::u8>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_layout_clone_span__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::integer::u8>::span,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::__Health_layout_clone__),
                                            ),
                                            ty: @core::array::Array::<core::integer::u8>,
                                        },
                                    ),
                                ),
                            ],
                            ty: core::array::Span::<core::integer::u8>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_values__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: dojo::world::IWorldDispatcherImpl::entity,
                            args: [
                                Value(
                                    Var(
                                        LocalVarId(test::world),
                                    ),
                                ),
                                Value(
                                    Literal(
                                        ExprLiteral {
                                            value: 79600263394408,
                                            ty: core::felt252,
                                        },
                                    ),
                                ),
                                Value(
                                    Var(
                                        LocalVarId(test::__get_macro_keys__),
                                    ),
                                ),
                                Value(
                                    Literal(
                                        ExprLiteral {
                                            value: 0,
                                            ty: core::integer::u8,
                                        },
                                    ),
                                ),
                                Value(
                                    FunctionCall(
                                        ExprFunctionCall {
                                            function: dojo::packing::calculate_packed_size,
                                            args: [
                                                Reference(
                                                    LocalVarId(test::__Health_layout_clone_span__),
                                                ),
                                            ],
                                            ty: core::integer::u32,
                                        },
                                    ),
                                ),
                                Value(
                                    Var(
                                        LocalVarId(test::__Health_layout_span__),
                                    ),
                                ),
                            ],
                            ty: core::array::Span::<core::felt252>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_model__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::felt252>::new,
                            args: [],
                            ty: core::array::Array::<core::felt252>,
                        },
                    ),
                },
            ),
            Expr(
                StatementExpr {
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>,
                            args: [
                                Value(
                                    Var(
                                        LocalVarId(test::__get_macro_keys__),
                                    ),
                                ),
                                Reference(
                                    LocalVarId(test::__Health_model__),
                                ),
                            ],
                            ty: (),
                        },
                    ),
                },
            ),
            Expr(
                StatementExpr {
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>,
                            args: [
                                Value(
                                    Var(
                                        LocalVarId(test::__Health_values__),
                                    ),
                                ),
                                Reference(
                                    LocalVarId(test::__Health_model__),
                                ),
                            ],
                            ty: (),
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health_model_span__,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::array::ArrayImpl::<core::felt252>::span,
                            args: [
                                Value(
                                    Snapshot(
                                        ExprSnapshot {
                                            inner: Var(
                                                LocalVarId(test::__Health_model__),
                                            ),
                                            ty: @core::array::Array::<core::felt252>,
                                        },
                                    ),
                                ),
                            ],
                            ty: core::array::Span::<core::felt252>,
                        },
                    ),
                },
            ),
            Let(
                StatementLet {
                    pattern: Variable(
                        __Health,
                    ),
                    expr: FunctionCall(
                        ExprFunctionCall {
                            function: core::option::OptionTraitImpl::<test::Health>::expect,
                            args: [
                                Value(
                                    FunctionCall(
                                        ExprFunctionCall {
                                            function: test::HealthSerde::deserialize,
                                            args: [
                                                Reference(
                                                    LocalVarId(test::__Health_model_span__),
                                                ),
                                            ],
                                            ty: core::option::Option::<test::Health>,
                                        },
                                    ),
                                ),
                                Value(
                                    Literal(
                                        ExprLiteral {
                                            value: 7624190543980043505746182176517533098884860453715398488377751337573,
                                            ty: core::felt252,
                                        },
                                    ),
                                ),
                            ],
                            ty: test::Health,
                        },
                    ),
                },
            ),
        ],
        tail: Some(
            Var(
                LocalVarId(test::__Health),
            ),
        ),
        ty: test::Health,
    },
)

//! > semantic_diagnostics
