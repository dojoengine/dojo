[package]
description = "Katana storage provider"
edition.workspace = true
name = "katana-provider"
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
katana-db = { workspace = true, features = [ "test-utils" ] }
katana-primitives = { workspace = true, features = [ "rpc" ] }

anyhow.workspace = true
auto_impl.workspace = true
parking_lot.workspace = true
thiserror.workspace = true
tracing.workspace = true

# fork provider deps
futures = { workspace = true, optional = true }
starknet = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }

alloy-primitives = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }

[features]
default = [ "fork", "in-memory" ]
fork = [ "dep:futures", "dep:starknet", "dep:tokio", "in-memory" ]
in-memory = [  ]
test-utils = [ "dep:alloy-primitives", "dep:serde_json" ]

[dev-dependencies]
alloy-primitives.workspace = true
katana-core.workspace = true
katana-runner.workspace = true
lazy_static.workspace = true
rand.workspace = true
rstest.workspace = true
rstest_reuse.workspace = true
serde_json.workspace = true
starknet.workspace = true
tempfile.workspace = true
url.workspace = true
