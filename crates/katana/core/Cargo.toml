[package]
description = "Katana core implementation."
edition.workspace = true
license-file.workspace = true
name = "katana-core"
repository.workspace = true
version.workspace = true

[dependencies]
katana-db.workspace = true
katana-executor.workspace = true
katana-primitives.workspace = true
katana-provider.workspace = true
katana-tasks.workspace = true

anyhow.workspace = true
async-trait = { workspace = true, optional = true }
cairo-vm.workspace = true
derive_more.workspace = true
dojo-metrics.workspace = true
futures.workspace = true
lazy_static.workspace = true
metrics.workspace = true
num-traits.workspace = true
parking_lot.workspace = true
reqwest = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
starknet.workspace = true
thiserror.workspace = true
tokio.workspace = true
tracing.workspace = true
url.workspace = true

alloy-primitives = { workspace = true, features = [ "serde" ] }
alloy-sol-types = { workspace = true, default-features = false, features = [ "json" ], optional = true }

alloy-contract = { workspace = true, default-features = false, optional = true }
alloy-network = { workspace = true, default-features = false, optional = true }
alloy-provider = { workspace = true, default-features = false, optional = true, features = [ "reqwest" ] }
alloy-transport = { workspace = true, default-features = false, optional = true }
alloy-rpc-types-eth = { workspace = true, default-features = false, optional = true }

[dev-dependencies]
assert_matches.workspace = true
hex.workspace = true
tempfile.workspace = true

[features]
messaging = [
    "alloy-contract",
    "alloy-network",
    "alloy-provider",
    "alloy-rpc-types-eth",
    "alloy-sol-types",
    "alloy-transport",
    "async-trait",
    "reqwest",
    "serde",
    "serde_json",
]
starknet-messaging = [  ]
