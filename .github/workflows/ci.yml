name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          components: rustfmt
          toolchain: nightly-2022-11-03
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/prisma.sh generate --schema=crates/dojo-indexer/prisma/schema.prisma
      - run: |
          cargo test

  cairofmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: dojo-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: scripts/cairo_fmt.sh --check

  cairotest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: dojo-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: scripts/cairo_test.sh

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/prisma.sh generate --schema=crates/dojo-indexer/prisma/schema.prisma
      - run: >
          scripts/clippy.sh

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/prisma.sh generate --schema=crates/dojo-indexer/prisma/schema.prisma
      - run: scripts/rust_fmt.sh --check

  # Check for unnecessary dependencies.
  udeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: "Rust Toolchain Setup"
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/prisma.sh generate --schema=crates/dojo-indexer/prisma/schema.prisma
      - name: "Download and run cargo-udeps"
        run: |
          wget -O - -c https://github.com/est31/cargo-udeps/releases/download/v0.1.35/cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          cargo-udeps-*/cargo-udeps udeps
        env:
          RUSTUP_TOOLCHAIN: nightly-2022-11-03

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/prisma.sh generate --schema=crates/dojo-indexer/prisma/schema.prisma
      - run: >
          scripts/docs.sh
