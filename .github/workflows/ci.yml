name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_RUST_VERSION: nightly-2022-11-03

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo test

  # cairofmt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly-2022-11-03
  #     - uses: Swatinem/rust-cache@v2
  #     - run: cargo install cairo-lang-formatter
  #     - run: scripts/cairo_fmt.sh --check

  cairotest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
      - run: scripts/cairo_test.sh

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
          components: clippy
      
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: >
          scripts/clippy.sh

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
          components: rustfmt
      
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/rust_fmt.sh --check

  # Check for unnecessary dependencies.
  udeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
      
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - id: cache-cargo-udeps
        uses: actions/cache@v2
        with:
          path: ~/.cargo-udeps-cache
          key: cargo-udeps-v0.1.35-${{ runner.os }}
      - name: "Download and run cargo-udeps"
        run: |
          if [ ! -f ~/.cargo-udeps-cache/cargo-udeps ]; then
            wget -O - -c https://github.com/est31/cargo-udeps/releases/download/v0.1.35/cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu.tar.gz | tar -xz
            mkdir -p ~/.cargo-udeps-cache
            mv cargo-udeps-*/cargo-udeps ~/.cargo-udeps-cache/cargo-udeps
          fi
          ~/.cargo-udeps-cache/cargo-udeps udeps
        env:
          RUSTUP_TOOLCHAIN: nightly-2022-11-03

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: >
          scripts/docs.sh

  test-hurl:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
      
      - uses: Swatinem/rust-cache@v2
      - name: Install Hurl
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/3.0.0/hurl_3.0.0_amd64.deb
          sudo apt update && sudo apt install ./hurl_3.0.0_amd64.deb
      - name: Build and start Katana node
        run: |
          cargo build --bin katana
          nohup target/debug/katana --accounts 2 --account-class crates/katana-core/contracts/compiled/account_without_validation.json --allow-zero-max-fee &
      - name: Execute Hurl Scripts
        run: hurl --test examples/rpc/**/*.hurl
